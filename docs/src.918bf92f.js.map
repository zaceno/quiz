{"version":3,"sources":["../node_modules/hyperapp/src/index.js","../questions.json","const.js","fx/fetch-random-int-list.js","fx/fetch-question.js","fx/time.js","model/lifeline.js","model/timer.js","model/question.js","model/sequence.js","model/index.js","view/options.js","view/question.js","view/next.js","view/lifelines.js","view/header.js","view/start-button.js","view/results.js","view/index.js","index.js"],"names":["RECYCLED_NODE","LAZY_NODE","TEXT_NODE","EMPTY_OBJ","EMPTY_ARR","map","isArray","Array","defer","requestAnimationFrame","setTimeout","createClass","obj","out","length","tmp","k","merge","a","b","batch","list","reduce","item","concat","isSameAction","shouldRestart","patchSubs","oldSubs","newSubs","dispatch","oldSub","newSub","i","subs","push","patchProperty","node","key","oldValue","newValue","listener","isSvg","setProperty","actions","slice","toLowerCase","addEventListener","removeEventListener","removeAttribute","setAttribute","createNode","vdom","ns","props","type","document","createTextNode","name","createElementNS","is","createElement","len","children","appendChild","getVNode","getKey","patch","parent","oldVNode","newVNode","nodeValue","insertBefore","removeChild","tmpVKid","oldVKid","oldKey","newKey","oldVProps","newVProps","oldVKids","newVKids","oldHead","newHead","oldTail","newTail","keyed","newKeyed","propsChanged","getTextVNode","createTextVNode","lazy","view","createVNode","value","undefined","recycleNode","nodeType","nodeName","call","childNodes","Lazy","h","rest","arguments","pop","app","state","lock","subscriptions","event","setState","newState","render","middleware","action","fx","parentNode","init","module","exports","question","options","correct","POOL_SIZE","Object","keys","QUESTIONS","SERIES_LENGTH","TIMER_DURATION","TIMER_EXTENSION","randomIntList","max","arr","x","r","Math","round","random","effectFn","fetchQuestion","id","_","frameSub","frame","timestamp","cancelAnimationFrame","on","used","off","isOn","isUsed","running","now","until","start","stop","update","extend","isRunning","remaining","q","answer","indexOf","unanswer","getAnswer","bisect","isCorrect","isIncorrect","isUnanswered","step","items","o","next","isDone","set","entries","v","bisection","lifeline","extension","timer","questions","SetTime","Reset","Start","SetList","sequence","SetQuestion","news","Next","Answer","Bisect","Extend","isStarted","getQuestion","isEnded","count","filter","countCorrect","countIncorrect","countUnanswered","getOptions","isBisectUsed","isBisectActive","timeRemaining","isExtendUsed","timeDuration","opt","option","selected","notselected","noanswer","content","Gauge","percent","width","duration","haveAnswer","nextbutton","LifelineButton","symbol","onuse","usedBisect","usedExtend","incorrect","unanswered","model","getElementById"],"mappings":"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","file":"src.918bf92f.js","sourceRoot":"../src","sourcesContent":["var RECYCLED_NODE = 1\nvar LAZY_NODE = 2\nvar TEXT_NODE = 3\nvar EMPTY_OBJ = {}\nvar EMPTY_ARR = []\nvar map = EMPTY_ARR.map\nvar isArray = Array.isArray\nvar defer =\n  typeof requestAnimationFrame !== \"undefined\"\n    ? requestAnimationFrame\n    : setTimeout\n\nvar createClass = function(obj) {\n  var out = \"\"\n\n  if (typeof obj === \"string\") return obj\n\n  if (isArray(obj) && obj.length > 0) {\n    for (var k = 0, tmp; k < obj.length; k++) {\n      if ((tmp = createClass(obj[k])) !== \"\") {\n        out += (out && \" \") + tmp\n      }\n    }\n  } else {\n    for (var k in obj) {\n      if (obj[k]) {\n        out += (out && \" \") + k\n      }\n    }\n  }\n\n  return out\n}\n\nvar merge = function(a, b) {\n  var out = {}\n\n  for (var k in a) out[k] = a[k]\n  for (var k in b) out[k] = b[k]\n\n  return out\n}\n\nvar batch = function(list) {\n  return list.reduce(function(out, item) {\n    return out.concat(\n      !item || item === true\n        ? 0\n        : typeof item[0] === \"function\"\n        ? [item]\n        : batch(item)\n    )\n  }, EMPTY_ARR)\n}\n\nvar isSameAction = function(a, b) {\n  return isArray(a) && isArray(b) && a[0] === b[0] && typeof a[0] === \"function\"\n}\n\nvar shouldRestart = function(a, b) {\n  if (a !== b) {\n    for (var k in merge(a, b)) {\n      if (a[k] !== b[k] && !isSameAction(a[k], b[k])) return true\n      b[k] = a[k]\n    }\n  }\n}\n\nvar patchSubs = function(oldSubs, newSubs, dispatch) {\n  for (\n    var i = 0, oldSub, newSub, subs = [];\n    i < oldSubs.length || i < newSubs.length;\n    i++\n  ) {\n    oldSub = oldSubs[i]\n    newSub = newSubs[i]\n    subs.push(\n      newSub\n        ? !oldSub ||\n          newSub[0] !== oldSub[0] ||\n          shouldRestart(newSub[1], oldSub[1])\n          ? [\n              newSub[0],\n              newSub[1],\n              newSub[0](dispatch, newSub[1]),\n              oldSub && oldSub[2]()\n            ]\n          : oldSub\n        : oldSub && oldSub[2]()\n    )\n  }\n  return subs\n}\n\nvar patchProperty = function(node, key, oldValue, newValue, listener, isSvg) {\n  if (key === \"key\") {\n  } else if (key === \"style\") {\n    for (var k in merge(oldValue, newValue)) {\n      oldValue = newValue == null || newValue[k] == null ? \"\" : newValue[k]\n      if (k[0] === \"-\") {\n        node[key].setProperty(k, oldValue)\n      } else {\n        node[key][k] = oldValue\n      }\n    }\n  } else if (key[0] === \"o\" && key[1] === \"n\") {\n    if (\n      !((node.actions || (node.actions = {}))[\n        (key = key.slice(2).toLowerCase())\n      ] = newValue)\n    ) {\n      node.removeEventListener(key, listener)\n    } else if (!oldValue) {\n      node.addEventListener(key, listener)\n    }\n  } else if (!isSvg && key !== \"list\" && key in node) {\n    node[key] = newValue == null ? \"\" : newValue\n  } else if (\n    newValue == null ||\n    newValue === false ||\n    (key === \"class\" && !(newValue = createClass(newValue)))\n  ) {\n    node.removeAttribute(key)\n  } else {\n    node.setAttribute(key, newValue)\n  }\n}\n\nvar createNode = function(vdom, listener, isSvg) {\n  var ns = \"http://www.w3.org/2000/svg\"\n  var props = vdom.props\n  var node =\n    vdom.type === TEXT_NODE\n      ? document.createTextNode(vdom.name)\n      : (isSvg = isSvg || vdom.name === \"svg\")\n      ? document.createElementNS(ns, vdom.name, { is: props.is })\n      : document.createElement(vdom.name, { is: props.is })\n\n  for (var k in props) {\n    patchProperty(node, k, null, props[k], listener, isSvg)\n  }\n\n  for (var i = 0, len = vdom.children.length; i < len; i++) {\n    node.appendChild(\n      createNode(\n        (vdom.children[i] = getVNode(vdom.children[i])),\n        listener,\n        isSvg\n      )\n    )\n  }\n\n  return (vdom.node = node)\n}\n\nvar getKey = function(vdom) {\n  return vdom == null ? null : vdom.key\n}\n\nvar patch = function(parent, node, oldVNode, newVNode, listener, isSvg) {\n  if (oldVNode === newVNode) {\n  } else if (\n    oldVNode != null &&\n    oldVNode.type === TEXT_NODE &&\n    newVNode.type === TEXT_NODE\n  ) {\n    if (oldVNode.name !== newVNode.name) node.nodeValue = newVNode.name\n  } else if (oldVNode == null || oldVNode.name !== newVNode.name) {\n    node = parent.insertBefore(\n      createNode((newVNode = getVNode(newVNode)), listener, isSvg),\n      node\n    )\n    if (oldVNode != null) {\n      parent.removeChild(oldVNode.node)\n    }\n  } else {\n    var tmpVKid\n    var oldVKid\n\n    var oldKey\n    var newKey\n\n    var oldVProps = oldVNode.props\n    var newVProps = newVNode.props\n\n    var oldVKids = oldVNode.children\n    var newVKids = newVNode.children\n\n    var oldHead = 0\n    var newHead = 0\n    var oldTail = oldVKids.length - 1\n    var newTail = newVKids.length - 1\n\n    isSvg = isSvg || newVNode.name === \"svg\"\n\n    for (var i in merge(oldVProps, newVProps)) {\n      if (\n        (i === \"value\" || i === \"selected\" || i === \"checked\"\n          ? node[i]\n          : oldVProps[i]) !== newVProps[i]\n      ) {\n        patchProperty(node, i, oldVProps[i], newVProps[i], listener, isSvg)\n      }\n    }\n\n    while (newHead <= newTail && oldHead <= oldTail) {\n      if (\n        (oldKey = getKey(oldVKids[oldHead])) == null ||\n        oldKey !== getKey(newVKids[newHead])\n      ) {\n        break\n      }\n\n      patch(\n        node,\n        oldVKids[oldHead].node,\n        oldVKids[oldHead],\n        (newVKids[newHead] = getVNode(\n          newVKids[newHead++],\n          oldVKids[oldHead++]\n        )),\n        listener,\n        isSvg\n      )\n    }\n\n    while (newHead <= newTail && oldHead <= oldTail) {\n      if (\n        (oldKey = getKey(oldVKids[oldTail])) == null ||\n        oldKey !== getKey(newVKids[newTail])\n      ) {\n        break\n      }\n\n      patch(\n        node,\n        oldVKids[oldTail].node,\n        oldVKids[oldTail],\n        (newVKids[newTail] = getVNode(\n          newVKids[newTail--],\n          oldVKids[oldTail--]\n        )),\n        listener,\n        isSvg\n      )\n    }\n\n    if (oldHead > oldTail) {\n      while (newHead <= newTail) {\n        node.insertBefore(\n          createNode(\n            (newVKids[newHead] = getVNode(newVKids[newHead++])),\n            listener,\n            isSvg\n          ),\n          (oldVKid = oldVKids[oldHead]) && oldVKid.node\n        )\n      }\n    } else if (newHead > newTail) {\n      while (oldHead <= oldTail) {\n        node.removeChild(oldVKids[oldHead++].node)\n      }\n    } else {\n      for (var i = oldHead, keyed = {}, newKeyed = {}; i <= oldTail; i++) {\n        if ((oldKey = oldVKids[i].key) != null) {\n          keyed[oldKey] = oldVKids[i]\n        }\n      }\n\n      while (newHead <= newTail) {\n        oldKey = getKey((oldVKid = oldVKids[oldHead]))\n        newKey = getKey(\n          (newVKids[newHead] = getVNode(newVKids[newHead], oldVKid))\n        )\n\n        if (\n          newKeyed[oldKey] ||\n          (newKey != null && newKey === getKey(oldVKids[oldHead + 1]))\n        ) {\n          if (oldKey == null) {\n            node.removeChild(oldVKid.node)\n          }\n          oldHead++\n          continue\n        }\n\n        if (newKey == null || oldVNode.type === RECYCLED_NODE) {\n          if (oldKey == null) {\n            patch(\n              node,\n              oldVKid && oldVKid.node,\n              oldVKid,\n              newVKids[newHead],\n              listener,\n              isSvg\n            )\n            newHead++\n          }\n          oldHead++\n        } else {\n          if (oldKey === newKey) {\n            patch(\n              node,\n              oldVKid.node,\n              oldVKid,\n              newVKids[newHead],\n              listener,\n              isSvg\n            )\n            newKeyed[newKey] = true\n            oldHead++\n          } else {\n            if ((tmpVKid = keyed[newKey]) != null) {\n              patch(\n                node,\n                node.insertBefore(tmpVKid.node, oldVKid && oldVKid.node),\n                tmpVKid,\n                newVKids[newHead],\n                listener,\n                isSvg\n              )\n              newKeyed[newKey] = true\n            } else {\n              patch(\n                node,\n                oldVKid && oldVKid.node,\n                null,\n                newVKids[newHead],\n                listener,\n                isSvg\n              )\n            }\n          }\n          newHead++\n        }\n      }\n\n      while (oldHead <= oldTail) {\n        if (getKey((oldVKid = oldVKids[oldHead++])) == null) {\n          node.removeChild(oldVKid.node)\n        }\n      }\n\n      for (var i in keyed) {\n        if (newKeyed[i] == null) {\n          node.removeChild(keyed[i].node)\n        }\n      }\n    }\n  }\n\n  return (newVNode.node = node)\n}\n\nvar propsChanged = function(a, b) {\n  for (var k in a) if (a[k] !== b[k]) return true\n  for (var k in b) if (a[k] !== b[k]) return true\n}\n\nvar getTextVNode = function(node) {\n  return typeof node === \"object\" ? node : createTextVNode(node)\n}\n\nvar getVNode = function(newVNode, oldVNode) {\n  return newVNode.type === LAZY_NODE\n    ? ((!oldVNode ||\n        (oldVNode.type !== LAZY_NODE ||\n          propsChanged(oldVNode.lazy, newVNode.lazy))) &&\n        ((oldVNode = getTextVNode(newVNode.lazy.view(newVNode.lazy))).lazy =\n          newVNode.lazy),\n      oldVNode)\n    : newVNode\n}\n\nvar createVNode = function(name, props, children, node, key, type) {\n  return {\n    name: name,\n    props: props,\n    children: children,\n    node: node,\n    type: type,\n    key: key\n  }\n}\n\nvar createTextVNode = function(value, node) {\n  return createVNode(value, EMPTY_OBJ, EMPTY_ARR, node, undefined, TEXT_NODE)\n}\n\nvar recycleNode = function(node) {\n  return node.nodeType === TEXT_NODE\n    ? createTextVNode(node.nodeValue, node)\n    : createVNode(\n        node.nodeName.toLowerCase(),\n        EMPTY_OBJ,\n        map.call(node.childNodes, recycleNode),\n        node,\n        undefined,\n        RECYCLED_NODE\n      )\n}\n\nexport var Lazy = function(props) {\n  return {\n    lazy: props,\n    type: LAZY_NODE\n  }\n}\n\nexport var h = function(name, props) {\n  for (var vdom, rest = [], children = [], i = arguments.length; i-- > 2; ) {\n    rest.push(arguments[i])\n  }\n\n  while (rest.length > 0) {\n    if (isArray((vdom = rest.pop()))) {\n      for (var i = vdom.length; i-- > 0; ) {\n        rest.push(vdom[i])\n      }\n    } else if (vdom === false || vdom === true || vdom == null) {\n    } else {\n      children.push(getTextVNode(vdom))\n    }\n  }\n\n  props = props || EMPTY_OBJ\n\n  return typeof name === \"function\"\n    ? name(props, children)\n    : createVNode(name, props, children, undefined, props.key)\n}\n\nexport var app = function(props) {\n  var state = {}\n  var lock = false\n  var view = props.view\n  var node = props.node\n  var vdom = node && recycleNode(node)\n  var subscriptions = props.subscriptions\n  var subs = []\n\n  var listener = function(event) {\n    dispatch(this.actions[event.type], event)\n  }\n\n  var setState = function(newState) {\n    if (state !== newState) {\n      state = newState\n      if (subscriptions) {\n        subs = patchSubs(subs, batch([subscriptions(state)]), dispatch)\n      }\n      if (view && !lock) defer(render, (lock = true))\n    }\n    return state\n  }\n\n  var dispatch = (props.middleware ||\n    function(obj) {\n      return obj\n    })(function(action, props) {\n    return typeof action === \"function\"\n      ? dispatch(action(state, props))\n      : isArray(action)\n      ? typeof action[0] === \"function\" || isArray(action[0])\n        ? dispatch(\n            action[0],\n            typeof action[1] === \"function\" ? action[1](props) : action[1]\n          )\n        : (batch(action.slice(1)).map(function(fx) {\n            fx && fx[0](dispatch, fx[1])\n          }, setState(action[0])),\n          state)\n      : setState(action)\n  })\n\n  var render = function() {\n    lock = false\n    node = patch(\n      node.parentNode,\n      node,\n      vdom,\n      (vdom = getTextVNode(view(state))),\n      listener\n    )\n  }\n\n  dispatch(props.init)\n}\n","module.exports={1:{question:\"The goliath birdeater spider is native to ... \",options:[\"Australia\",\"Indonesia\",\"South America\",\"North Africa\"],correct:2},2:{question:'Who said: \"Whoever has will be given more. But whoever does not have, even what he has will be taken away from him\"?',options:[\"Karl Marx\",\"Jesus\",\"Napoleon\",\"Buddha\"],correct:1},3:{question:\"Persephone was the greek godess of ...\",options:[\"Vegetation\",\"Commerce\",\"Cattle\",\"Music\"],correct:0},4:{question:\"Quetzalcoatl was the god of wind, air and learning to the ...\",options:[\"Mayans\",\"Incas\",\"Toltecs\",\"Aztecs\"],correct:3},5:{question:'Complete this quote by Benjamin Franklin: \"An investment in ... always pays the best interest.\"',options:[\"Bonds\",\"Love\",\"Knowledge\",\"Land\"],correct:2},6:{question:\"Who was the first man to reach the South Pole?\",options:[\"Marco Polo\",\"Jacque Cousteau\",\"Roald Amundsen\",\"Ernest Shackleton\"],correct:2},7:{question:'A \"flying buttress\" is ... ',options:[\"An architectural element\",\"A type of ladies' gown\",\"A pastry\",\"A flower\"],correct:0},8:{question:'Complete this quote by Socrates: \"... is not worth living.\"',options:[\"An ignorant life\",\"An unexamined life\",\"A decadent life\",\"An impious life\"],correct:1},9:{question:\"Which of these men was not present at the Yalta conference of 1945?\",options:[\"Franklin D Roosevelt\",\"Charles De Gaulle\",\"Joseph Stalin\",\"Winston Churchill\"],correct:1},10:{question:\"Who you gonna call?\",options:[\"My friends!\",\"Yo momma!\",\"The Cops!\",\"Ghost Busters!\"],correct:3},11:{question:'A \"bowline\" is ...',options:[\"a cut of beef\",\"a method of navigation\",\"a type of knot\",\"a dance move\"],correct:2},12:{question:\"Which of these events is NOT part of a decathlon?\",options:[\"Shot put\",\"Javelin throw\",\"1500 meters\",\"Hammer throw\"],correct:3},13:{question:\"Which is the hottest planet in the solar system?\",options:[\"Mercury\",\"Venus\",\"Jupiter\",\"Saturn\"],correct:1},14:{question:\"What is the chemical symbol for potassium?\",options:[\"P\",\"F\",\"K\",\"T\"],correct:2},15:{question:\"What is the capital of New Zeeland?\",options:[\"Wellington\",\"Auckland\",\"Christchurch\",\"Hamilton\"],correct:0},16:{question:\"Which is the oldest, continously inhabited city in the world?\",options:[\"Istanbul\",\"Athens\",\"Jerusalem\",\"Damascus\"],correct:3},17:{question:\"Pope Gregory IX ordered the extermination of all ... across Europe.\",options:[\"Witches\",\"Prostitues\",\"Templars\",\"Cats\"],correct:3},18:{question:\"How old is Stonehenge (as far as we know today)?\",options:[\"3000 years\",\"5000 years\",\"10,000 years\",\"15,000 years\"],correct:1},19:{question:\"Neil Patrick Harris is an actor in the cast of the TV sitcom ...\",options:[\"Friends\",\"Parks & Recreation\",\"How I met your mother\",\"Community\"],correct:2},20:{question:\"This animal was sacred to the cult of Mithras\",options:[\"Bull\",\"Ram\",\"Lion\",\"Serpent\"],correct:0}};","import QUESTIONS from '../questions.json'\nexport const POOL_SIZE = Object.keys(QUESTIONS).length\nexport const SERIES_LENGTH = 10\nexport const TIMER_DURATION = 15000\nexport const TIMER_EXTENSION = 10000\nexport { QUESTIONS }\n","/*\n    Produces an array of given `length`, \n    containing random unique integers between 1 and `max` (inclusive)\n    `length` must be <= `max`\n    (Based of Fisher-Yates shuffling algorithm)\n\n    in the form of a hyperapp effect\n */\n\nconst randomIntList = function(max, length) {\n    let arr = [...Array(max).keys()].map(x => '' + (x + 1))\n    for (let i = max - 1; i >= 0; i--) {\n        let r = Math.round(Math.random() * i)\n        let x = arr[r]\n        arr[r] = arr[i]\n        arr[i] = x\n    }\n    return arr.slice(0, length)\n}\n\nconst effectFn = (dispatch, { action, max, length }) =>\n    dispatch(action, randomIntList(max, length))\n\nexport default (max, length, action) => [effectFn, { max, length, action }]\n","import { QUESTIONS } from '../const'\n\n/*\n    phony question-fetch as a hyperapp effect\n*/\n\nconst fetchQuestion = (dispatch, { action, id }) =>\n    setTimeout(_ => {\n        dispatch(action, { id, ...QUESTIONS[id] })\n    }, 400) //emulate network delay\n\nexport default (id, action) => [fetchQuestion, { action, id }]\n","/*\n\n    A hyperapp subscription to requestAnimationFrame\n    which will dispatch actions with timestamps as payloads\n\n*/\n\nconst frameSub = (dispatch, { action }) => {\n    let id = requestAnimationFrame(function frame(timestamp) {\n        id = requestAnimationFrame(frame)\n        dispatch(action, timestamp)\n    })\n    return () => cancelAnimationFrame(id)\n}\n\nexport default action => [frameSub, { action }]\n","export const init = { on: false, used: false }\nexport const on = state => (state.used ? state : { on: true, used: true })\nexport const off = state => ({ on: false, used: state.used })\nexport const isOn = ({ on }) => on\nexport const isUsed = ({ used }) => used\n","import { TIMER_DURATION, TIMER_EXTENSION } from '../const'\n\nexport const init = {\n    running: false,\n    now: null,\n    until: null,\n}\nexport const start = state => ({ ...init, running: true })\n\nexport const stop = state => ({ ...init })\n\nexport const update = (state, now) =>\n    state.until && now > state.until\n        ? { ...init }\n        : {\n              ...state,\n              until:\n                  !state.running || state.until\n                      ? state.until\n                      : TIMER_DURATION + now,\n              now: state.running ? now : null,\n          }\n\nexport const extend = state =>\n    state.now < state.until\n        ? {\n              ...state,\n              until: state.until + TIMER_EXTENSION,\n          }\n        : state\n\nexport const isRunning = state => state.running\n\nexport const remaining = state =>\n    !isRunning(state)\n        ? null\n        : !state.until\n        ? TIMER_DURATION\n        : state.until - state.now\n","export const question = q => q.question\nexport const answer = (q, answer) => {\n    let i = q.options.indexOf(answer)\n    return { ...q, answer: i < 0 ? null : i }\n}\nexport const unanswer = q => ({ ...q, answer: null })\nexport const getAnswer = q =>\n    q.answer == null ? null : q.options[q.answer] || null\nexport const options = (q, bisect) =>\n    !bisect\n        ? q.options\n        : q.correct < 2\n        ? q.options.slice(0, 2)\n        : q.options.slice(2)\nexport const isCorrect = q => q.answer != null && q.correct === q.answer\nexport const isIncorrect = q => q.answer != null && q.correct !== q.answer\nexport const isUnanswered = q => q.answer == null\n","export const init = list => ({\n    list,\n    step: 0,\n    items: list.reduce((o, id) => ((o[id] = null), o), {}),\n})\nexport const next = state => ({\n    ...state,\n    step: state.step === state.length ? state.step : state.step + 1,\n})\nexport const item = state =>\n    isDone(state) ? null : state.items[state.list[state.step]]\nexport const id = state => (isDone(state) ? null : state.list[state.step])\nexport const set = (state, id, item) => ({\n    ...state,\n    items: { ...state.items, [id]: item },\n})\nexport const update = (state, item) =>\n    isDone(state)\n        ? state\n        : {\n              ...state,\n              items: { ...state.items, [state.list[state.step]]: item },\n          }\nexport const isDone = state => state.step >= state.list.length\nexport const items = state => Object.entries(state.items).map(([k, v]) => v)\n","/*\n\nThis is the main model of the app.\n\nFile is structured into three sections. \n1. The initialization, and subscriptions functions for starting the app\n2. All the actions (state transforms)\n3. All the queries (compute values from state)\n\n*/\n\nimport {\n    POOL_SIZE,\n    SERIES_LENGTH,\n    TIMER_DURATION,\n    TIMER_EXTENSION,\n} from '../const'\n\nimport fetchRandomIntList from '../fx/fetch-random-int-list'\nimport fetchQuestion from '../fx/fetch-question'\nimport subscribeTime from '../fx/time'\n\nimport * as lifeline from './lifeline'\nimport * as timer from './timer'\nimport * as question from './question'\nimport * as sequence from './sequence'\n\n// --- INIT & SUBS  ---\n\nexport const init = {\n    bisection: lifeline.init,\n    extension: lifeline.init,\n    timer: timer.init,\n    questions: null,\n}\n\nexport const subscriptions = state => [\n    timer.isRunning(state.timer) && subscribeTime(SetTime),\n]\n\n// --- ACTIONS ---\n\nexport const Reset = state => init\n\nexport const Start = state => [\n    state,\n    fetchRandomIntList(POOL_SIZE, SERIES_LENGTH, SetList),\n]\n\nexport const SetList = (state, list) => [\n    { ...state, questions: sequence.init(list) },\n    ...list.map(id => fetchQuestion(id, SetQuestion)),\n]\n\n// Only meant to be called as a response from the\n// fetchQuestion effect\nexport const SetQuestion = (state, question) => ({\n    ...state,\n    questions: sequence.set(state.questions, question.id, question),\n    timer:\n        question.id === sequence.id(state.questions)\n            ? timer.start(state.timer)\n            : state.timer,\n})\n\n// Only meant to be called as a response from the time\n// subscription\nexport const SetTime = (state, now) => {\n    let news = { ...state, timer: timer.update(state.timer, now) }\n    // if the timer has timed out, advance to the next question\n    return !timer.isRunning(news.timer) ? Next(news) : news\n}\n\n// Selects one of the options as the current answer\nexport const Answer = (state, answer) => ({\n    ...state,\n    questions: sequence.update(\n        state.questions,\n        question.answer(sequence.item(state.questions), answer)\n    ),\n})\n\n// Advances to the next questio\nexport const Next = state => {\n    const questions = sequence.next(state.questions)\n    return {\n        ...state,\n        questions,\n        //deactivate currently active lifelines\n        bisection: lifeline.off(state.bisection),\n        extension: lifeline.off(state.extension),\n        //if there is another question, restart the timer\n        //else stop it\n        timer: sequence.item(questions)\n            ? timer.start(state.timer)\n            : timer.stop(state.timer),\n    }\n}\n\n// Invoke the \"bisect\" lifeline\n// (= remove two incorrect options)\nexport const Bisect = state =>\n    lifeline.isUsed(state.bisection)\n        ? state\n        : {\n              ...state,\n              bisection: lifeline.on(state.bisection),\n              //since we might have removed the currently\n              //selected answer, turn off all answers\n              questions: sequence.update(\n                  state.questions,\n                  question.unanswer(sequence.item(state.questions))\n              ),\n          }\n\n//Invoke the \"extend\" lifeline\n//(= add 10s to the timer)\nexport const Extend = state =>\n    lifeline.isUsed(state.extension)\n        ? state\n        : {\n              ...state,\n              extension: lifeline.on(state.extension),\n              timer: timer.extend(state.timer),\n          }\n\n// --- QUERIES: -----\n\nexport const isStarted = state => !!state.questions\n\nexport const getQuestion = state => {\n    if (!state.questions) return null\n    let q = sequence.item(state.questions)\n    return q ? question.question(q) : null\n}\n\nexport const getAnswer = state => {\n    if (!state.questions) return null\n    let q = sequence.item(state.questions)\n    return q ? question.getAnswer(q) : null\n}\n\nexport const isEnded = state => sequence.isDone(state.questions)\n\nconst count = ({ questions }, filter) =>\n    !questions ? null : sequence.items(questions).filter(filter).length\nexport const countCorrect = state => count(state, question.isCorrect)\nexport const countIncorrect = state => count(state, question.isIncorrect)\nexport const countUnanswered = state => count(state, question.isUnanswered)\n\n// Return the options for a question\n// which is normally all of them, except\n// when the bisect-lifeline is active\nexport const getOptions = state => {\n    if (!state.questions) return null\n    let q = sequence.item(state.questions)\n    return !q ? null : question.options(q, lifeline.isOn(state.bisection))\n}\n\nexport const isBisectUsed = state =>\n    isStarted(state) && lifeline.isUsed(state.bisection)\n\nexport const isBisectActive = state =>\n    isStarted(state) && lifeline.isOn(state.bisection)\n\nexport const timeRemaining = state => timer.remaining(state.timer)\n\nexport const isExtendUsed = state => lifeline.isUsed(state.extension)\n\n// if the extend lifeline is active, the timer duration is 10s more\n// that it usually is\nexport const timeDuration = state =>\n    TIMER_DURATION + (lifeline.isOn(state.extension) ? TIMER_EXTENSION : 0)\n","import { h } from 'hyperapp'\nimport { Answer } from '../model'\n\nexport default ({ options, answer }) => (\n    <ul class=\"options\">\n        {options.map(opt => (\n            <li\n                onmousedown={[Answer, opt]}\n                class={{\n                    option: true,\n                    selected: answer && opt === answer,\n                    notselected: answer && opt !== answer,\n                    noanswer: !answer,\n                }}\n            >\n                <div class=\"bullet\"></div>\n                <span class=\"text\">{opt}</span>\n            </li>\n        ))}\n    </ul>\n)\n","import { h } from 'hyperapp'\nexport default (_, content) => <p class=\"question\">{content}</p>\n","import { h } from 'hyperapp'\nimport { Next } from '../model'\n\nconst Gauge = ({ percent }, content) => (\n    <div class=\"gauge-container\">\n        <div class=\"gauge-bar\" style={{ width: percent + '%' }}></div>\n        <p class=\"gauge-content\">{content}</p>\n    </div>\n)\n\nexport default ({ remaining, duration, haveAnswer }) => (\n    <div class=\"next\">\n        <div class={{ nextbutton: true, haveAnswer }} onclick={Next}>\n            <p class=\"label\">Next {'\\u203A'}</p>\n            <Gauge percent={Math.round((100 * remaining) / duration)}>\n                {Math.round(remaining / 1000)}s\n            </Gauge>\n        </div>\n    </div>\n)\n","import { h } from 'hyperapp'\nimport { Bisect, Extend } from '../model'\n\nconst LifelineButton = ({ used, onuse }, symbol) => (\n    <button disabled={used} class={{ used }} onclick={onuse}>\n        {symbol}\n    </button>\n)\n\nexport default ({ usedBisect, usedExtend }) => (\n    <div class=\"lifelines\">\n        <LifelineButton used={usedBisect} onuse={Bisect}>\n            {'\\u25D1'}\n        </LifelineButton>\n        <LifelineButton used={usedExtend} onuse={Extend}>\n            {'\\u231B'}\n        </LifelineButton>\n    </div>\n)\n","import { h } from 'hyperapp'\nimport { Reset } from '../model'\n\nexport default ({ running }) => (\n    <header>\n        Quiz Time!\n        {running && <button onclick={Reset}>Quit</button>}\n    </header>\n)\n","import { h } from 'hyperapp'\nimport { Start } from '../model'\nexport default () => <button onclick={Start}>Start!</button>\n","import { h } from 'hyperapp'\n\nexport default ({ correct, incorrect, unanswered }) => (\n    <table class=\"results\">\n        <tr class=\"correct\">\n            <th>Correct: {correct}</th>\n            <td>\n                <div class=\"bar\" style={{ width: correct * 10 + '%' }} />\n            </td>\n        </tr>\n        <tr class=\"incorrect\">\n            <th>Incorrect: {incorrect}</th>\n            <td>\n                <div class=\"bar\" style={{ width: incorrect * 10 + '%' }} />\n            </td>\n        </tr>\n        <tr class=\"unanswered\">\n            <th>Unanswered: {unanswered}</th>\n            <td>\n                <div class=\"bar\" style={{ width: unanswered * 10 + '%' }} />\n            </td>\n        </tr>\n    </table>\n)\n","/*\n    This is the main view file for the app. It exports a single function\n    which takes app-state as it's only argument. \n\n    It composes several components imported from other files in the same\n    folder. It uses the model's queries to calculate properties to pass\n    to the components from the state.\n    \n    Actions, however, are imported from model by the components themselves\n    (since they don't depend on the state)\n\n*/\n\nimport { h } from 'hyperapp'\nimport * as model from '../model/index'\nimport Options from './options'\nimport Question from './question'\nimport Next from './next'\nimport Lifelines from './lifelines'\nimport Header from './header'\nimport StartButton from './start-button'\nimport Results from './results'\n\nexport default state => (\n    <section>\n        <Header running={model.isStarted(state)} />\n        {!model.isStarted(state) ? (\n            <main class=\"start-container\">\n                <StartButton />\n            </main>\n        ) : model.isEnded(state) ? (\n            <main class=\"result-container\">\n                <p>All Done! Here are your results:</p>\n                <Results\n                    correct={model.countCorrect(state)}\n                    incorrect={model.countIncorrect(state)}\n                    unanswered={model.countUnanswered(state)}\n                />\n            </main>\n        ) : !model.getQuestion(state) ? (\n            <main class=\"loading-container\">\n                <div class=\"spinner\"></div>\n            </main>\n        ) : (\n            <main class=\"game-container\">\n                <Question>{model.getQuestion(state)}</Question>\n                <Options\n                    options={model.getOptions(state)}\n                    answer={model.getAnswer(state)}\n                />\n                <Next\n                    remaining={model.timeRemaining(state)}\n                    duration={model.timeDuration(state)}\n                    haveAnswer={!!model.getAnswer(state)}\n                />\n                <Lifelines\n                    usedBisect={model.isBisectUsed(state)}\n                    usedExtend={model.isExtendUsed(state)}\n                />\n            </main>\n        )}\n    </section>\n)\n","import { app } from 'hyperapp'\nimport { init, subscriptions } from './model'\nimport view from './view'\napp({\n    node: document.getElementById('app'),\n    init,\n    view,\n    subscriptions,\n})\n"]}